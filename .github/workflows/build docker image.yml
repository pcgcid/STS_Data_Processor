name: Build and publish Docker image
on:
  pull_request:
     branches: [ "master" ]  
  push:
     branches: [ "master" ]  
  release:
    types: [published]
env:
   # Use docker.io for Docker Hub if empty
   REGISTRY: ghcr.io
   # github.repository as <account>/<repo>
   IMAGE_NAME: ${{ github.repository }}

jobs:
  build-docker-container:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      USERNAME: ${{ github.repository_owner }}
      REPOSITORY: ${{ github.repository }}
      
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-docker-action@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
           registry: ${{ env.REGISTRY }}
           username: ${{ env.USERNAME }}
           password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create latest tag variable
        run: echo "CONTAINER=${{ env.REGISTRY }}/${{ env.USERNAME }}/sts_processor:latest" >> $GITHUB_ENV

      - name: Extract release tag
        if: github.event_name == 'release'
        run: echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      
      
      - name: Create release tag variable
        if: github.event_name == 'release'
        run: echo "VERSIONED=${{ env.REGISTRY }}/${{ env.USERNAME }}/sts_processor:${{ env.RELEASE_TAG }}" >> $GITHUB_ENV

      - name: Build container
        run: |
              docker build --build-arg GIT_COMMIT=$(git rev-parse --short HEAD) \
              --build-arg GIT_DATE="$(git log -1 --format=%cd --date=iso-strict)" \
              --build-arg IMAGE_TAG=$${{ env.RELEASE_TAG }}
              -t ${{ env.CONTAINER }} .

      - name: Tag and push release (and latest) container
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            docker tag ${{ env.CONTAINER }} ${{ env.VERSIONED }}
            docker push ${{ env.VERSIONED }}
          fi
          docker push ${{ env.CONTAINER }}
          
      - name: Update README
        run: sed -i "s|ghcr\.io/pcgcid/sts_processor:[^ ]*|ghcr.io/pcgcid/sts_processor:${RELEASE_TAG}|g" README.md

      - name: Commit and push changes
        run: |
          git add README.md
          git commit -m "Update README with version ${RELEASE_TAG}"
          git push    

